# Alternative GNU Make workspace makefile autogenerated by Premake

ifndef config
  config=debug
endif

ifndef verbose
  SILENT = @
endif

ifeq ($(config),debug)
  bluesdk_config = debug
  bluehttp_config = debug
  blueprint_config = debug

else ifeq ($(config),release)
  bluesdk_config = release
  bluehttp_config = release
  blueprint_config = release

else
  $(error "invalid configuration $(config)")
endif

PROJECTS := bluesdk bluehttp blueprint

.PHONY: all clean help $(PROJECTS) 

all: $(PROJECTS)

bluesdk:
ifneq (,$(bluesdk_config))
	@echo "==== Building bluesdk ($(bluesdk_config)) ===="
	@${MAKE} --no-print-directory -C . -f bluesdk.make config=$(bluesdk_config)
endif

bluehttp: bluesdk
ifneq (,$(bluehttp_config))
	@echo "==== Building bluehttp ($(bluehttp_config)) ===="
	@${MAKE} --no-print-directory -C . -f bluehttp.make config=$(bluehttp_config)
endif

blueprint: bluesdk
ifneq (,$(blueprint_config))
	@echo "==== Building blueprint ($(blueprint_config)) ===="
	@${MAKE} --no-print-directory -C . -f blueprint.make config=$(blueprint_config)
endif

clean:
	@${MAKE} --no-print-directory -C . -f bluesdk.make clean
	@${MAKE} --no-print-directory -C . -f bluehttp.make clean
	@${MAKE} --no-print-directory -C . -f blueprint.make clean

help:
	@echo "Usage: make [config=name] [target]"
	@echo ""
	@echo "CONFIGURATIONS:"
	@echo "  debug"
	@echo "  release"
	@echo ""
	@echo "TARGETS:"
	@echo "   all (default)"
	@echo "   clean"
	@echo "   bluesdk"
	@echo "   bluehttp"
	@echo "   blueprint"
	@echo ""
	@echo "For more information, see https://github.com/premake/premake-core/wiki"